/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    bool isPalindrome(ListNode* head) {
        
        ListNode *next;
        int ar[10]={}, ar2[10]={};
        int size =0, temp=0, i=0;
        int cnt =0, lp =0, run=0;
        
        while(head != NULL){
        ar[i] = head -> val;
        head -> next = next;
        i++;}
        
        
       size = sizeof(ar) / sizeof(ar[0]);
    lp = size -1;
        
       //copying the array
        for(i=0 ;i< size;i++)
         {
        ar2[i] = ar[lp]; 
        lp--;
        }
        
        //comparing the array for palindrome
        for(i=0; i<size; i++)
        {
            if(ar[i] == ar2[i])
                cnt++;
            else
                cnt = 0;
        }
        if(cnt == size-1)
            return true;
        else 
            return false;
    }
};
